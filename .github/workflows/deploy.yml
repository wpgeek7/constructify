name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/constructify
            
            # Pull latest code
            git pull origin main
            
            # Rebuild and restart containers
            docker compose -f docker-compose.ssl.yml down
            docker compose -f docker-compose.ssl.yml build --no-cache
            docker compose -f docker-compose.ssl.yml up -d
            
            # Wait for containers
            sleep 10
            
            # Run migrations
            docker compose -f docker-compose.ssl.yml exec -T backend php artisan migrate --force
            
            # Clear and cache config
            docker compose -f docker-compose.ssl.yml exec -T backend php artisan config:cache
            docker compose -f docker-compose.ssl.yml exec -T backend php artisan route:cache
            docker compose -f docker-compose.ssl.yml exec -T backend php artisan view:cache
            
            # Set permissions
            docker compose -f docker-compose.ssl.yml exec -T backend chown -R www-data:www-data /var/www/html/storage
            docker compose -f docker-compose.ssl.yml exec -T backend chmod -R 775 /var/www/html/storage
            
            echo "‚úÖ Deployment completed successfully!"

      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/constructify
            docker compose -f docker-compose.ssl.yml ps
            echo "Checking application health..."
            sleep 5
            curl -f https://constructefy.ai || echo "Frontend check"
            curl -f https://constructefy.ai/api || echo "Backend check"

      - name: Notify on Success
        if: success()
        run: |
          echo "üéâ Deployment to EC2 successful!"
          echo "Website: https://constructefy.ai"
          echo "API: https://constructefy.ai/api"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed! Check the logs above."

