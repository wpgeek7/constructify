version: '3.8'

services:
  database:
    image: mysql:8.0
    container_name: constructify-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-constructify}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_USER: ${DB_USERNAME:-constructify_user}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - constructify-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.apache
    container_name: constructify-backend-apache
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - backend_storage:/var/www/html/storage
    environment:
      APP_NAME: Constructify
      APP_ENV: production
      APP_DEBUG: 'false'
      APP_URL: https://constructefy.ai
      DB_CONNECTION: mysql
      DB_HOST: database
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-constructify}
      DB_USERNAME: ${DB_USERNAME:-constructify_user}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
    ports:
      - "8000:80"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - constructify-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: constructify-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx-ssl.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    networks:
      - constructify-network

networks:
  constructify-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  backend_storage:
    driver: local

